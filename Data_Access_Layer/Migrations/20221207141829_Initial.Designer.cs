// <auto-generated />
using System;
using Data_Access_Layer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
	[DbContext(typeof(DBContext))]
	[Migration("20221207141829_Initial")]
	partial class Initial
	{
		/// <inheritdoc />
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "7.0.0")
				.HasAnnotation("Relational:MaxIdentifierLength", 128);

			SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

			modelBuilder.Entity("InCompanyAPI.Context.Models.ChoiceModel", b =>
				{
					b.Property<int>("_id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int");

					SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

					b.Property<int?>("QuestionBaseModel_id")
						.HasColumnType("int");

					b.Property<int>("_index")
						.HasColumnType("int");

					b.Property<string>("choice")
						.IsRequired()
						.HasMaxLength(128)
						.HasColumnType("nvarchar(128)");

					b.HasKey("_id");

					b.HasIndex("QuestionBaseModel_id");

					b.ToTable("ChoiceModel");
				});

			modelBuilder.Entity("InCompanyAPI.Context.Models.QuestionBaseModel", b =>
				{
					b.Property<int>("_id")
						.ValueGeneratedOnAdd()
						.HasColumnType("int");

					SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

					b.Property<Guid?>("ServeyModel_id")
						.HasColumnType("uniqueidentifier");

					b.Property<int>("_index")
						.HasColumnType("int");

					b.Property<string>("questionText")
						.IsRequired()
						.HasMaxLength(128)
						.HasColumnType("nvarchar(128)");

					b.Property<string>("questionType")
						.IsRequired()
						.HasMaxLength(32)
						.HasColumnType("nvarchar(32)");

					b.Property<bool>("required")
						.HasColumnType("bit");

					b.HasKey("_id");

					b.HasIndex("ServeyModel_id");

					b.HasIndex("_index");

					b.ToTable("QuestionBaseModel");
				});

			modelBuilder.Entity("InCompanyAPI.Questions.Models.ServeyModel", b =>
				{
					b.Property<Guid>("_id")
						.ValueGeneratedOnAdd()
						.HasColumnType("uniqueidentifier");

					b.Property<DateTime>("_createDate")
						.HasColumnType("datetime2");

					b.Property<bool>("active")
						.HasColumnType("bit");

					b.Property<string>("description")
						.HasMaxLength(512)
						.HasColumnType("nvarchar(512)");

					b.Property<string>("owner")
						.IsRequired()
						.HasMaxLength(64)
						.HasColumnType("nvarchar(64)");

					b.Property<string>("title")
						.IsRequired()
						.HasMaxLength(128)
						.HasColumnType("nvarchar(128)");

					b.HasKey("_id");

					b.ToTable("Survey");
				});

			modelBuilder.Entity("InCompanyAPI.Context.Models.ChoiceModel", b =>
				{
					b.HasOne("InCompanyAPI.Context.Models.QuestionBaseModel", null)
						.WithMany("choices")
						.HasForeignKey("QuestionBaseModel_id");
				});

			modelBuilder.Entity("InCompanyAPI.Context.Models.QuestionBaseModel", b =>
				{
					b.HasOne("InCompanyAPI.Questions.Models.ServeyModel", null)
						.WithMany("questions")
						.HasForeignKey("ServeyModel_id");
				});

			modelBuilder.Entity("InCompanyAPI.Context.Models.QuestionBaseModel", b =>
				{
					b.Navigation("choices");
				});

			modelBuilder.Entity("InCompanyAPI.Questions.Models.ServeyModel", b =>
				{
					b.Navigation("questions");
				});
#pragma warning restore 612, 618
		}
	}
}
